{"pageProps":{"metaData":{"title":"Typescript类型学习","description":"Typescript类型定义","tags":["typescript"],"keywords":["typescript"],"id":"typescript类型","create":1689302190716,"lastUpdate":1692695410479},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Typescript类型学习\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"枚举类型提取\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"enum NAME {\\n  'xiaoming'='xiaoming',\\n  'xiaozhang'='xiaozhang',\\n}\\ntype Name = keyof typeof Name// 'xiaoming'|'xiaozhang'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"数组类型提取\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const arr = [\\n  { id: 1, name: 'John' },\\n  { id: 2, name: 'Jane' },\\n  { id: 3, name: 'Bob' },\\n];\\n\\ntype ItemTypes = typeof arr[number]; // 提取数组每一项的类型\\ntype ItemKeys = keyof typeof arr[number]; // 提取数组每个对象的键作为类型\\ntype NameTypes = typeof arr[number]['name']; // 提取数组每个对象的 name 属性的类型\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}