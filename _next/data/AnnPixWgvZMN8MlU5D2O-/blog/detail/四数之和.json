{"pageProps":{"metaData":{"title":"四数之和","description":"四数之和","tags":["算法"],"keywords":["算法"],"id":"四数之和","create":1692955612733,"lastUpdate":1692956372932},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"四数之和\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b], nums[c], nums[d]] (若两个四元组元素一一对应，则认为两个四元组重复)\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"输入：nums = [1,0,-1,0,-2,2], target = 0\\n\\n输出：[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"输入：nums = [2,2,2,2,2], target = 8\\n\\n输出：[[2,2,2,2]]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"先从暴力开始求解\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js:暴力解法\",\n        children: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[][]}\\n */\\nvar fourSum = function(nums, target) {\\n\\n  for(let a=0;a<>){\\n    for(){\\n      for(){\\n        for(){\\n\\n        }\\n      }\\n    }\\n  }\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 2 3 4 5\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}