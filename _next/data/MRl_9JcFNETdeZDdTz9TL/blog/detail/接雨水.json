{"pageProps":{"metaData":{"title":"算法-接雨水","description":"算法-接雨水","tags":["算法"],"keywords":["算法"],"id":"接雨水","create":1692153928600,"lastUpdate":1692153928643},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"接雨水\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"输出：6\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"要接住雨水得是\", _jsx(_components.code, {\n        children: \"先递减然后再递增的一个区间\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js:接雨水\",\n        children: \"\\n  function solution(arr){\\n    \\n    let scope = []\\n\\n    // 找接水区间\\n    arr.forEach((item,index)=>{\\n      if(item != 0 ){\\n        // 找到比当前下标大或者小的下标 切 两个校标\\n        let left = arr.slice(index);\\n        let findIndex = left.findIndex( leftItem => leftItem >= item)\\n        if( findIndex != -1 ){\\n          scope.push({\\n            start:index,\\n            end\\n          })\\n        }\\n        scope.push({\\n          start:index,\\n          end\\n        })\\n      }\\n    })\\n  }\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}