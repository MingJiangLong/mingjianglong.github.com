{"pageProps":{"metaData":{"title":"NextJS打包","description":"NextJS打包配置对应字段了解，进行简单的打包测试","tags":["NextJS"],"keywords":["NextJS"],"id":"next打包配置学习","create":1682416219028,"lastUpdate":1692154000761},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    pre: \"pre\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"NextJS打包配置对应字段了解，进行简单的打包测试\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"assetPrefix\"\n        }), \" 静态资源前缀\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"  const nextConfig = {\\n    assetPrefix:'/前缀'\\n  }\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"Redirects\"\n        }), \" 将source原路径重定向到destination新路径，访问的是destination路径;\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-JS\",\n        children: \"// 最终访问的是/blog路径,浏览器显示的也是blog路径\\nconst nextConfig = {\\n  redirects() {\\n    return [\\n      {\\n        source: \\\"/\\\",\\n        destination: \\\"/blog\\\",\\n        permanent: true\\n      }\\n    ]\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"Rewrites\"\n        }), \"  将原路径充当代理以此来屏蔽目标路径。浏览器显示的是destination路径，实际访问的是source路径；功能类似于\", _jsxs(_components.strong, {\n          children: [\"userRouter.push(path,as)\", _jsx(_components.strong, {\n            children: \"中 参数\"\n          }), \"as\"]\n        }), \"的功能;\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-JS\",\n        children: \"// 浏览器显示的是\\\"/blog\\\"，实际访问的是\\\"/\\\"路径\\nconst nextConfig = {\\n  async rewrites() {\\n    return [\\n      {\\n        source: '/',\\n        destination: '/blog'\\n      }\\n    ]\\n  },\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}