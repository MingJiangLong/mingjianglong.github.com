{"pageProps":{"metaData":{"title":"Gird布局","description":"Gird布局","tags":["grid"],"keywords":["grid"],"id":"grid布局学习","create":1691563501797,"lastUpdate":1692955490157},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Gird布局\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid\",\n        children: \"MDN Grid\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"api\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-template-column\"\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"grid-template-columns 该属性是基于网格列的维度，去定义网格线的名称和网格轨道的尺寸大小。\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-template-columns: none;\\n\\n  /* <track-list> values */\\n  grid-template-columns: 100px 1fr;\\n  grid-template-columns: [linename] 100px;\\n  grid-template-columns: [linename1] 100px [linename2 linename3];\\n  grid-template-columns: minmax(100px, 1fr);\\n  grid-template-columns: fit-content(40%);\\n  grid-template-columns: repeat(3, 200px);\\n  grid-template-columns: subgrid;\\n  grid-template-columns: masonry;\\n\\n  /* <auto-track-list> values */\\n  grid-template-columns: 200px repeat(auto-fill, 100px) 300px;\\n  grid-template-columns:\\n    minmax(100px, max-content)\\n    repeat(auto-fill, 200px) 20%;\\n  grid-template-columns:\\n    [linename1] 100px [linename2]\\n    repeat(auto-fit, [linename3 linename4] 300px)\\n    100px;\\n  grid-template-columns:\\n    [linename1 linename2] 100px\\n    repeat(auto-fit, [linename1] 300px) [linename3];\\n\\n  /* Global values */\\n  grid-template-columns: inherit;\\n  grid-template-columns: initial;\\n  grid-template-columns: revert;\\n  grid-template-columns: revert-layer;\\n  grid-template-columns: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-template-rows\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-template-rows: none;\\n\\n  /* <track-list> values */\\n  grid-template-rows: 100px 1fr;\\n  grid-template-rows: [linename] 100px;\\n  grid-template-rows: [linename1] 100px [linename2 linename3];\\n  grid-template-rows: minmax(100px, 1fr);\\n  grid-template-rows: fit-content(40%);\\n  grid-template-rows: repeat(3, 200px);\\n  grid-template-rows: subgrid;\\n  grid-template-rows: masonry;\\n\\n  /* <auto-track-list> values */\\n  grid-template-rows: 200px repeat(auto-fill, 100px) 300px;\\n  grid-template-rows:\\n    minmax(100px, max-content)\\n    repeat(auto-fill, 200px) 20%;\\n  grid-template-rows:\\n    [linename1] 100px [linename2]\\n    repeat(auto-fit, [linename3 linename4] 300px)\\n    100px;\\n  grid-template-rows:\\n    [linename1 linename2] 100px\\n    repeat(auto-fit, [linename1] 300px) [linename3];\\n\\n  /* Global values */\\n  grid-template-rows: inherit;\\n  grid-template-rows: initial;\\n  grid-template-rows: revert;\\n  grid-template-rows: revert-layer;\\n  grid-template-rows: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid\"\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"grid 是一个 CSS 简写属性，可以用来设置以下属性： 显式网格属性 grid-template-rows、grid-template-columns 和 grid-template-areas， 隐式网格属性 grid-auto-rows、grid-auto-columns 和 grid-auto-flow， 间距属性 grid-column-gap和 grid-row-gap。\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-text:基本语法\",\n            children: \"  grid = \\n      <'grid-template'>                                   |\\n      <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>?  |\\n      [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>  \\n\"\n          })\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* <'grid-template'> values */\\n  grid: none;\\n  grid: \\\"a\\\" 100px \\\"b\\\" 1fr;\\n  grid: [linename1] \\\"a\\\" 100px [linename2];\\n  grid: \\\"a\\\" 200px \\\"b\\\" min-content;\\n  grid: \\\"a\\\" minmax(100px, max-content) \\\"b\\\" 20%;\\n  grid: 100px / 200px;\\n  grid: minmax(400px, min-content) / repeat(auto-fill, 50px);\\n\\n  /* <'grid-template-rows'> /\\n    [ auto-flow && dense? ] <'grid-auto-columns'>? values */\\n  grid: 200px / auto-flow;\\n  grid: 30% / auto-flow dense;\\n  grid: repeat(3, [line1 line2 line3] 200px) / auto-flow 300px;\\n  grid: [line1] minmax(20em, max-content) / auto-flow dense 40%;\\n\\n  /* [ auto-flow && dense? ] <'grid-auto-rows'>? /\\n    <'grid-template-columns'> values */\\n  grid: auto-flow / 200px;\\n  grid: auto-flow dense / 30%;\\n  grid: auto-flow 300px / repeat(3, [line1 line2 line3] 200px);\\n  grid: auto-flow dense 40% / [line1] minmax(20em, max-content);\\n\\n  /* Global values */\\n  grid: inherit;\\n  grid: initial;\\n  grid: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-area\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword values */\\n  grid-area: auto;\\n  grid-area: auto / auto;\\n  grid-area: auto / auto / auto;\\n  grid-area: auto / auto / auto / auto;\\n\\n  /* <custom-ident> values */\\n  grid-area: some-grid-area;\\n  grid-area: some-grid-area / another-grid-area;\\n\\n  /* <integer> && <custom-ident>? values */\\n  grid-area: some-grid-area 4;\\n  grid-area: some-grid-area 4 / 2 another-grid-area;\\n\\n  /* span && [ <integer> || <custom-ident> ] values */\\n  grid-area: span 3;\\n  grid-area: span 3 / span some-grid-area;\\n  grid-area: 2 span / another-grid-area span;\\n\\n  /* Global values */\\n  grid-area: inherit;\\n  grid-area: initial;\\n  grid-area: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-auto-columns\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* 以下是不同类型的属性值示例 */\\n  /* Keyword values */\\n  grid-auto-columns: min-content;\\n  grid-auto-columns: max-content;\\n  grid-auto-columns: auto;\\n\\n  /* <length> values */\\n  grid-auto-columns: 100px;\\n  grid-auto-columns: 20cm;\\n  grid-auto-columns: 50vmax;\\n\\n  /* <percentage> values */\\n  grid-auto-columns: 10%;\\n  grid-auto-columns: 33.3%;\\n\\n  /* <flex> values */\\n  grid-auto-columns: 0.5fr;\\n  grid-auto-columns: 3fr;\\n\\n  /* minmax() values */\\n  grid-auto-columns: minmax(100px, auto);\\n  grid-auto-columns: minmax(max-content, 2fr);\\n  grid-auto-columns: minmax(20%, 80vmax);\\n\\n  /* fit-content() values */\\n  grid-auto-columns: fit-content(400px);\\n  grid-auto-columns: fit-content(5cm);\\n  grid-auto-columns: fit-content(20%);\\n\\n  /* multiple track-size values */\\n  grid-auto-columns: min-content max-content auto;\\n  grid-auto-columns: 100px 150px 390px;\\n  grid-auto-columns: 10% 33.3%;\\n  grid-auto-columns: 0.5fr 3fr 1fr;\\n  grid-auto-columns: minmax(100px, auto) minmax(max-content, 2fr) minmax(20%, 80vmax);\\n  grid-auto-columns: 100px minmax(100px, auto) 10% 0.5fr fit-content(400px);\\n\\n  /* Global values */\\n  grid-auto-columns: inherit;\\n  grid-auto-columns: initial;\\n  grid-auto-columns: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-auto-flow\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword values */\\n  grid-auto-flow: row;\\n  grid-auto-flow: column;\\n  grid-auto-flow: dense;\\n  grid-auto-flow: row dense;\\n  grid-auto-flow: column dense;\\n\\n  /* Global values */\\n  grid-auto-flow: inherit;\\n  grid-auto-flow: initial;\\n  grid-auto-flow: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-auto-rows\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword values */\\n  grid-auto-rows: min-content;\\n  grid-auto-rows: max-content;\\n  grid-auto-rows: auto;\\n\\n  /* <length> values */\\n  grid-auto-rows: 100px;\\n  grid-auto-rows: 20cm;\\n  grid-auto-rows: 50vmax;\\n\\n  /* <percentage> values */\\n  grid-auto-rows: 10%;\\n  grid-auto-rows: 33.3%;\\n\\n  /* <flex> values */\\n  grid-auto-rows: 0.5fr;\\n  grid-auto-rows: 3fr;\\n\\n  /* minmax() values */\\n  grid-auto-rows: minmax(100px, auto);\\n  grid-auto-rows: minmax(max-content, 2fr);\\n  grid-auto-rows: minmax(20%, 80vmax);\\n\\n  /* multiple track-size values */\\n  grid-auto-rows: min-content max-content auto;\\n  grid-auto-rows: 100px 150px 390px;\\n  grid-auto-rows: 10% 33.3%;\\n  grid-auto-rows: 0.5fr 3fr 1fr;\\n  grid-auto-rows: minmax(100px, auto) minmax(max-content, 2fr) minmax(20%, 80vmax);\\n  grid-auto-rows: 100px minmax(100px, auto) 10% 0.5fr fit-content(400px);\\n\\n  /* Global values */\\n  grid-auto-rows: inherit;\\n  grid-auto-rows: initial;\\n  grid-auto-rows: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-column\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-column-end\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-column-end: auto;\\n\\n  /* <custom-ident> values */\\n  grid-column-end: somegridarea;\\n\\n  /* <integer> + <custom-ident> values */\\n  grid-column-end: 2;\\n  grid-column-end: somegridarea 4;\\n\\n  /* span + <integer> + <custom-ident> values */\\n  grid-column-end: span 3;\\n  grid-column-end: span somegridarea;\\n  grid-column-end: 5 somegridarea span;\\n\\n  /* Global values */\\n  grid-column-end: inherit;\\n  grid-column-end: initial;\\n  grid-column-end: revert;\\n  grid-column-end: revert-layer;\\n  grid-column-end: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-column-start\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-column-start: auto;\\n\\n  /* <custom-ident> value */\\n  grid-column-start: somegridarea;\\n\\n  /* <integer> + <custom-ident> values */\\n  grid-column-start: 2;\\n  grid-column-start: somegridarea 4;\\n\\n  /* span + <integer> + <custom-ident> values */\\n  grid-column-start: span 3;\\n  grid-column-start: span somegridarea;\\n  grid-column-start: span somegridarea 5;\\n\\n  /* Global values */\\n  grid-column-start: inherit;\\n  grid-column-start: initial;\\n  grid-column-start: revert;\\n  grid-column-start: revert-layer;\\n  grid-column-start: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-row\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword values */\\n  grid-row: auto;\\n  grid-row: auto / auto;\\n\\n  /* <custom-ident> values */\\n  grid-row: somegridarea;\\n  grid-row: somegridarea / someothergridarea;\\n\\n  /* <integer> + <custom-ident> values */\\n  grid-row: somegridarea 4;\\n  grid-row: 4 somegridarea / 6;\\n\\n  /* span + <integer> + <custom-ident> values */\\n  grid-row: span 3;\\n  grid-row: span somegridarea;\\n  grid-row: 5 somegridarea span;\\n  grid-row: span 3 / 6;\\n  grid-row: span somegridarea / span someothergridarea;\\n  grid-row: 5 somegridarea span / 2 span;\\n\\n  /* Global values */\\n  grid-row: inherit;\\n  grid-row: initial;\\n  grid-row: revert;\\n  grid-row: revert-layer;\\n  grid-row: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-row-end\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-row-end: auto;\\n\\n  /* <custom-ident> values */\\n  grid-row-end: somegridarea;\\n\\n  /* <integer> + <custom-ident> values */\\n  grid-row-end: 2;\\n  grid-row-end: somegridarea 4;\\n\\n  /* span + <integer> + <custom-ident> values */\\n  grid-row-end: span 3;\\n  grid-row-end: span somegridarea;\\n  grid-row-end: 5 somegridarea span;\\n\\n  /* Global values */\\n  grid-row-end: inherit;\\n  grid-row-end: initial;\\n  grid-row-end: revert;\\n  grid-row-end: revert-layer;\\n  grid-row-end: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-row-start\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-row-start: auto;\\n\\n  /* <custom-ident> values */\\n  grid-row-start: somegridarea;\\n\\n  /* <integer> + <custom-ident> values */\\n  grid-row-start: 2;\\n  grid-row-start: somegridarea 4;\\n\\n  /* span + <integer> + <custom-ident> values */\\n  grid-row-start: span 3;\\n  grid-row-start: span somegridarea;\\n  grid-row-start: 5 somegridarea span;\\n\\n  /* Global values */\\n  grid-row-start: inherit;\\n  grid-row-start: initial;\\n  grid-row-start: revert;\\n  grid-row-start: revert-layer;\\n  grid-row-start: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-template\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-template: none;\\n\\n  /* grid-template-rows / grid-template-columns values */\\n  grid-template: 100px 1fr / 50px 1fr;\\n  grid-template: auto 1fr / auto 1fr auto;\\n  grid-template: [linename] 100px / [columnname1] 30% [columnname2] 70%;\\n  grid-template: fit-content(100px) / fit-content(40%);\\n\\n  /* grid-template-areas grid-template-rows / grid-template-column values */\\n  grid-template:\\n    \\\"a a a\\\"\\n    \\\"b b b\\\";\\n  grid-template:\\n    \\\"a a a\\\" 20%\\n    \\\"b b b\\\" auto;\\n  grid-template:\\n    [header-top] \\\"a a a\\\" [header-bottom]\\n    [main-top] \\\"b b b\\\" 1fr [main-bottom]\\n    / auto 1fr auto;\\n\\n  /* Global values */\\n  grid-template: inherit;\\n  grid-template: initial;\\n  grid-template: revert;\\n  grid-template: revert-layer;\\n  grid-template: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"grid-template-areas\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-css:CSS\",\n            children: \"  /* Keyword value */\\n  grid-template-areas: none;\\n\\n  /* <string> values */\\n  grid-template-areas: \\\"a b\\\";\\n  grid-template-areas:\\n    \\\"a b b\\\"\\n    \\\"a c d\\\";\\n\\n  /* Global values */\\n  grid-template-areas: inherit;\\n  grid-template-areas: initial;\\n  grid-template-areas: revert;\\n  grid-template-areas: revert-layer;\\n  grid-template-areas: unset;\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}