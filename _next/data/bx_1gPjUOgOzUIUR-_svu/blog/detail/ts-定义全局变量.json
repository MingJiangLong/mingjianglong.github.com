{"pageProps":{"metaData":{"title":"ts定义全局变量","description":"ts定义全局变量，以及可以能碰到的问题","tags":["ts"],"keywords":["ts"],"id":"ts-定义全局变量","create":1682676637588,"lastUpdate":1692953641171},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"ts定义全局变量\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"日常开发中如果一些包是手动通过script标签引入，并且\", _jsx(_components.code, {\n        children: \"@types\"\n      }), \"也没有包可以，就需要我们手动定义，如下:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts:**.d.ts\",\n        children: \"/**\\n * 支付宝jssdk部分模块描述\\n */\\ndeclare namespace ap {\\n  function alert(options: { content: string; buttonText?: string; title?: string }): void;\\n}\\ninterface Window {\\n  uboxClient: {\\n    getToken: (callback: (token: string) => void) => void\\n  },\\n  UBOX_TOKEN?: string\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"可能会碰到的问题\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"如果正常定义之后,编辑器仍然没有智能提示,排除编辑器自身的问题，最好检查\", _jsx(_components.code, {\n        children: \"tsconfig.json\"\n      }), \"文件\", _jsx(_components.code, {\n        children: \"include\"\n      }), \"配置,\\n你自定义的\", _jsx(_components.code, {\n        children: \"*.d.ts\"\n      }), \"文件是否在include规则下面。。。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts:tsconfig.json\",\n        children: \"{\\n  \\\"compilerOptions\\\": {\\n    \\\"baseUrl\\\": \\\".\\\",\\n    \\\"target\\\": \\\"ES2020\\\",\\n    \\\"useDefineForClassFields\\\": true,\\n    \\\"module\\\": \\\"ESNext\\\",\\n    \\\"lib\\\": [\\\"ES2020\\\", \\\"DOM\\\", \\\"DOM.Iterable\\\"],\\n    \\\"skipLibCheck\\\": true,\\n\\n    /* Bundler mode */\\n    \\\"moduleResolution\\\": \\\"bundler\\\",\\n    \\\"allowImportingTsExtensions\\\": true,\\n    \\\"resolveJsonModule\\\": true,\\n    \\\"isolatedModules\\\": true,\\n    \\\"noEmit\\\": true,\\n    \\\"jsx\\\": \\\"preserve\\\",\\n    \\\"paths\\\": {\\\"@/*\\\":[\\\"src/*\\\"]},\\n\\n    /* Linting */\\n    \\\"strict\\\": true,\\n    \\\"noUnusedLocals\\\": true,\\n    \\\"noUnusedParameters\\\": true,\\n    \\\"noFallthroughCasesInSwitch\\\": true\\n  },\\n  \\\"include\\\": [\\\"src/**/*.ts\\\", \\\"src/**/*.d.ts\\\", \\\"src/**/*.tsx\\\", \\\"src/**/*.vue\\\"],\\n  \\\"references\\\": [{ \\\"path\\\": \\\"./tsconfig.node.json\\\" }]\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}