{"pageProps":{"metaData":{"title":"不能用作 JSX 组件","description":"使用tsx时vscode提示\"**不能用作 JSX 组件\"","tags":["tsx","React"],"keywords":["tsx","React"],"id":"不能用作JSX组件","create":1687688994186,"lastUpdate":1692957257301},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"不能用作 JSX 组件\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"原因\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在代码没有问题的前提下多半原因是\", _jsx(_components.code, {\n        children: \"@types/react\"\n      }), \"和本地\", _jsx(_components.code, {\n        children: \"ts\"\n      }), \"版本冲突原因\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"解决办法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"查询本地ts版本\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"tsc --version\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"npm社区找到\", _jsx(_components.code, {\n        children: \"@types/react\"\n      }), \", 根据\", _jsx(_components.code, {\n        children: \"ts\"\n      }), \"版本找到对应\", _jsx(_components.code, {\n        children: \"@types/react\"\n      }), \"版本下载\\n\", _jsx(_components.img, {\n        src: \"/md-images/notUsedAsJsx.jpg\",\n        alt: \"不能用作JSX组件\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}